@page "/Articles/Edit/{Id:int}"

<h3>Edit</h3>

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <EditForm Model="Model" OnValidSubmit="btnEdit_Click">
                <DataAnnotationsValidator /><ValidationSummary />
                <div class="form-group">
                    <label for="id">ID: </label> @Model.Id
                </div>
                <div class="form-group">
                    <label for="Title">Title</label>
                    <InputText id="Title" class="form-control" placeholder="Enter Title" @bind-Value="Model.Title" />
                    <ValidationMessage For="() => Model.Title" class="form-text text-muted" />
                </div>
                <div class="form-group">
                    <label for="Content">Content</label>
                    <InputTextArea id="Content" class="form-control" placeholder="Enter Text" @bind-Value="Model.Content" />
                    <ValidationMessage For="() => Model.Content" class="form-text text-muted" />
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-primary">저장</button>
                    <a href="/Articles" class="btn btn-secondary">취소</a>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Id { get; set; }
    [Inject]
    public NavigationManager Navigation { get; set; }
    [Inject]
    public ArticleAppDbContext DbContext { get; set; }

    private Article Model;

    protected void btnEdit_Click()
    {
        Model.Modified = DateTime.Now;
        DbContext.SaveChanges();
        Navigation.NavigateTo($"/Articles/Details/{Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        Model = await DbContext.Articles.FindAsync(Id);
    }
}
